{
	"Vue app.config.errorHandler()": {
		"prefix": "app.config.errorHandler",
		"body": [
			"app.config.errorHandler = function (err, vm, info) {",
			"  ${1}",
			"};$0"
		],
		"description": "Assign a handler for uncaught errors during component render function and watchers. The handler gets called with the error and the application instance.\n"
	},
	"Vue app.config.warnHandler()": {
		"prefix": "app.config.warnHandler",
		"body": [
			"app.config.warnHandler = function (msg, vm, trace) {",
			"  ${1}",
			"};$0"
		],
		"description": "Assign a custom handler for runtime Vue warnings. Note this only works during development and is ignored in production.\n"
	},
	"Vue app.config.globalProperties": {
		"prefix": "app.config.globalProperties",
		"body": [
			"app.config.globalProperties.${1:property} = ${2:value};"
		],
		"description": "Adds a global property that can be accessed in any component instance inside the application. The componentâ€™s property will take priority when there are conflicting keys\n"
	},
	"Vue app.config.isCustomElement()": {
		"prefix": "app.config.isCustomElement",
		"body": ["app.config.isCustomElement = (tag) => ($1);"],
		"description": "Specifies a method to recognize custom elements defined outside of Vue (e.g., using the Web Components APIs). If component matches this condition, it won't need local or global registration and Vue won't throw a warning about an `Unknown custom element`\n"
	},
	"Vue app.config.optionMergeStrategies.property()": {
		"prefix": "app.config.optionMergeStrategies",
		"body": [
			"app.config.optionMergeStrategies.${1:property} = (parent, child, vm) => {",
			"  $0",
			"};"
		],
		"description": "Define merging strategies for custom options.\nThe merge strategy receives the value of that option defined on the parent and child instances as the first and second arguments, respectively. The context application instance is passed as the third argument.\n"
	},
	"Vue app.config.performance": {
		"prefix": "app.config.performance_UNSAFE",
		"body": ["app.config.performance = ${1:false};"],
		"description": "Set this to true to enable component init, compile, render and patch performance tracing in the browser devtool performance/timeline panel. Only works in development mode and in browsers that support the performance.mark (opens new window) API.\n"
	}
}
